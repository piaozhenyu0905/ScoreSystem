{"version":3,"file":"js/628.214c1629.js","mappings":"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","sources":["webpack://scoring_system_front/./src/api/todoList.js","webpack://scoring_system_front/./src/page/admin/TodoListAd.vue","webpack://scoring_system_front/./src/page/ordinary/TodoList.vue","webpack://scoring_system_front/./src/page/ordinary/TodoList.vue?a91e"],"sourcesContent":["import axios from \"axios\";\n\n//获取该时间段内的执行情况数据\nconst getTodoListApi = (pageNum, pageSize) => new Promise((resolve, reject) =>{\n    axios({\n        method:'get',\n        url:'/api/todolist',\n        headers:{\n            \"Content-Type\": \"application/json\",\n        },\n        params: {\n            pageNum: pageNum,\n            pageSize: pageSize\n        },\n    }).then((response)=>{\n        resolve(response)\n    }).catch((error)=>{\n        reject(error.response)\n    })\n})\n\n//获取人员列表\nconst getUserListApi = () => new Promise((resolve, reject) =>{\n    axios({\n        method:'get',\n        url:'/api/findAll',\n        headers:{\n            \"Content-Type\": \"application/json\",\n        }\n    }).then((response)=>{\n        resolve(response)\n    }).catch((error)=>{\n        reject(error.response)\n    })\n})\n\n//提交选择的被评估人\nconst getEvaluatedListApi = (userIds) => new Promise((resolve, reject) =>{\n    let data = {\n        userIds: userIds\n    };\n    axios({\n        method:'post',\n        url:'/api/add/evaluated',\n        headers:{\n            \"Content-Type\": \"application/json\",\n        },\n      data: JSON.stringify(data),\n    }).then((response)=>{\n        resolve(response)\n    }).catch((error)=>{\n        reject(error.response)\n    })\n})\n\nexport{\n    getTodoListApi,\n    getUserListApi,\n    getEvaluatedListApi\n}","import script from \"./TodoListAd.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodoListAd.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 普通用户--我的待办 -->\n<script setup>\nimport { ref, reactive, onMounted, onUnmounted } from \"vue\"\n// import { FormOutlined } from '@ant-design/icons-vue';\nimport { message } from \"ant-design-vue\";\nimport { useRouter } from 'vue-router';\nimport { getTodoListApi, getUserListApi, getEvaluatedListApi } from '@/api/todoList'\nonMounted(() => {\n    getTodoList()\n    getUserList()\n    updateScrollHeight();\n    window.addEventListener('resize', updateScrollHeight);\n})\n\n// 在组件卸载时移除事件监听\nonUnmounted(() => {\n    window.removeEventListener('resize', updateScrollHeight);\n});\n\nconst scrollHeight = ref('60vh');  // 定义滚动区域高度\nconst router = useRouter();\nconst pagination = reactive({  // 表格页码相关设置\n    pageSize: 11, //每页最多条目数\n    current: 1, //当前页码\n    showSizeChanger: false,\n    total: 0, //总条目数\n    showTotal: (total, range) => `总共 ${total} 条数据`, // 在这里定义显示总数据量的格式\n})\nconst columns = ref([\n    {\n        title: '序号',\n        dataIndex: 'index',\n        key: 'index',\n        width: '7%',\n        align: 'center'\n    },\n    {\n        title: '任务类型',\n        dataIndex: 'taskTag',\n        key: 'taskTag',\n        width: '15%',\n        align: 'center'\n    },\n    {\n        title: '任务详情',\n        dataIndex: 'taskDetail',\n        key: 'taskDetail',\n        width: '30%',\n        align: 'center'\n    },\n    // {\n    //     title: '提交人',\n    //     dataIndex: 'submitPerson',\n    //     key: 'submitPerson',\n    //     align: 'center'\n    // },\n    {\n        title: '提交时间',\n        dataIndex: 'submitTime',\n        key: 'submitTime',\n        align: 'center'\n    },\n    {\n        title: '操作',\n        key: 'action',\n        align: 'center'\n    }\n])\nconst data = ref([]);\n\n// 动态更新高度\nconst updateScrollHeight = () => {\n    const screenHeight = window.innerHeight;\n    const containerHeight = screenHeight - 35 - 10; // 假设父容器需要减去固定的偏移量\n    if (screenHeight < 800) {\n        scrollHeight.value = `${containerHeight * 0.63}px`; // 小屏幕高度为 50%\n    } else {\n        scrollHeight.value = `${containerHeight * 0.7}px`; // 大屏幕高度为 80%\n    }\n};\n// 调用api-获取待办列表\nconst getTodoList = () => {\n    // 清空 data.value\n    data.value.splice(0, data.value.length);\n    // 处理当前页码\n    if (sessionStorage.getItem('currentIndex')) {\n        pagination.current = sessionStorage.getItem('currentIndex')\n    }\n    getTodoListApi(pagination.current, pagination.pageSize)\n        .then(res => {\n            if (res.data.code === 200) {\n                // 设置分页总数\n                pagination.total = res.data.data.total;\n\n                // 清空 data.value，避免多次追加导致重复数据\n                data.value = [];\n\n                // 筛选数据：仅保留 operation 为 0 的项\n                const filteredData = res.data.data.data.filter(item => item.operation === 0);\n\n                // 映射数据，格式化并追加到 data.value\n                data.value.push(\n                    ...filteredData.map((item, index) => ({\n                        key: item.id,\n                        index: index + 1,\n                        taskTag: item.type,\n                        taskDetail: item.detail,\n                        submitTime: item.presentDate,\n                        operation: item.operation,\n                        evaluatedName: item.evaluatedName,\n                        department: item.department,\n                    }))\n                );\n\n            } else {\n                // 处理非成功响应\n                message.error(\"获取失败！\" + res.data.msg);\n            }\n        })\n        .catch(err => {\n            // 捕获并处理请求错误\n            message.error(\"请求失败，请稍后重试！\");\n        });\n}\n\n// 设置三种任务标签的颜色\nconst getTagColor = (taskTag) => {\n    if (taskTag === '添加评估人审批') return 'cyan';\n    if (taskTag === '添加被评估人审批') return 'orange';\n    if (taskTag === '周边评议') return 'purple';\n    return 'green';\n};\n// 调用api-进行单条任务的同意\nconst handleAgreeOne = (record) => {\n    // 1、获取传入接口的任务id\n    // 2、调用单条同意接口\n    message.success('同意成功！')\n}\n// 处理翻页\nconst handleTableChange = (e) => {\n    pagination.current = Number(e.current); //更新当前页码\n    pagination.pageSize = e.pageSize; //更新每页显示条目数\n    sessionStorage.setItem('currentIndex', pagination.current)\n    getTodoList()  // 重新获取列表数据\n}\nconst openRefuse = ref(false);  //拒绝理由输入框默认不展示\nconst showModal = () => {\n    openRefuse.value = true;\n};\nconst handleEnterQues = (record) => {\n    // 1、获取record中的被评估人信息（姓名+部门）\n    const evaluatedName = record.evaluatedName\n    const department = record.department\n    const todoListId = record.key\n    // 2、通过session传递信息\n    sessionStorage.setItem('evaluatedName', evaluatedName)\n    sessionStorage.setItem('department', department)\n    sessionStorage.setItem('todoListId', todoListId)\n    // 3、页面跳转\n    if (localStorage.getItem('userRole') === '0') {\n        router.push({\n            path: '/quesnaireEdit'\n        })\n    } else {\n        router.push({\n            path: '/quesnaireEditAd'\n        })\n    }\n\n}\nconst openDetail = ref(false);  //查看详情弹窗默认不展示\nconst showDetail = () => {\n    openDetail.value = true;\n};\nconst openEvaluator = ref(false); //添加被评估人弹窗默认不展示\nconst showEvaluator = () => {\n    openEvaluator.value = true;\n};\nconst evaluator = ref([]);\nconst options = ref([])\n// 获取人员列表\nconst getUserList = () => {\n    getUserListApi().then(res => {\n        if (res.data.code === 200) {\n            options.value = []\n            for (let i = 0; i <= res.data.data.length - 1; i++) {\n                options.value.push({\n                    value: res.data.data[i].name + '(' + res.data.data[i].department + ')',\n                    key: res.data.data[i].userId\n                })\n            }\n        } else {\n            message.error('获取失败！'+ res.data.msg);\n        }\n    }).catch(err => {\n        message.error('请求失败！', err);\n    })\n}\n// 调用api-将选择的被评估人key值传给后端\nconst handleEvaluatorOk = () => {\n    // 1、获取被评估人key值\n    const selectedKeys = evaluator.value.map(item => options.value.find(opt => opt.value === item).key);\n    if (selectedKeys.length === 0) {\n        message.warn('您还未选择被评估人哦𖦹𖦹 .ᐟ.ᐟ ');\n        return;\n    }\n    if (selectedKeys.length > 3) {\n        message.warn('最多只能选择三个被评估人哦𖦹𖦹 .ᐟ.ᐟ ');\n        return;\n    }\n    // 2、调用添加被评估人接口（若添加成功，清除evaluator值）\n    getEvaluatedListApi(selectedKeys).then(res => {\n        if (res.data.code === 200) {\n            message.success('添加成功！');\n            evaluator.value = []\n            openEvaluator.value = false;  // 3、关闭弹窗\n            getTodoList()\n        } else {\n            message.error('添加失败！' + res.data.msg);\n        }\n    }).catch(err => {\n        message.error('请求失败！', err);\n    })\n};\n</script>\n\n<template>\n    <div class=\"todoList-container\">\n        <!-- 标题区域 -->\n        <div class=\"title\">\n            <span>我的待办</span>\n            <!-- 我要评估按钮 -->\n            <a-button type=\"primary\" @click=\"showEvaluator\">\n                我要评估\n            </a-button>\n        </div>\n        <!-- 内容区域 -->\n        <div class=\"todoTable\">\n            <!-- 待办表格 -->\n            <a-table :columns=\"columns\" :data-source=\"data\" :rowKey=\"record => record.key\" :scroll=\"{ y: scrollHeight }\"\n                :pagination=\"pagination\" :bordered=\"true\" @change=\"handleTableChange\">\n                <template #bodyCell=\"{ column, record }\">\n                    <!-- 设置三种任务标签的颜色 -->\n                    <template v-if=\"column.key === 'taskTag'\">\n                        <span>\n                            <a-tag :key=\"record.taskTag\" :color=\"getTagColor(record.taskTag)\">\n                                {{ record.taskTag }}\n                            </a-tag>\n                        </span>\n                    </template>\n                    <!-- 设置操作栏 -->\n                    <template v-if=\"column.key === 'action'\">\n                        <span v-if=\"record.taskTag === '添加评估人审批'\">\n                            <a style=\"color: #0014B7;text-decoration: underline;\" @click=\"showDetail\">查看详情</a>\n                            <a-divider type=\"vertical\" />\n                            <a style=\"color: #BD3124;font-weight: bold;\" @click=\"showModal\">拒绝</a>\n                        </span>\n                        <span v-else-if=\"record.taskTag === '添加被评估人审批'\">\n                            <a style=\"color: #3F9373;font-weight: bold;\" @click=\"handleAgreeOne(record)\">同意</a>\n                            <a-divider type=\"vertical\" />\n                            <a style=\"color: #BD3124;font-weight: bold;\" @click=\"showModal\">拒绝</a>\n                        </span>\n                        <span v-else-if=\"record.taskTag === '周边评议'\">\n                            <a style=\"color: #3F9373;font-weight: bold;\" @click=\"handleEnterQues(record)\">进入评议</a>\n                        </span>\n                    </template>\n                </template>\n            </a-table>\n            <!-- 添加被评估人弹窗 -->\n            <a-modal v-model:open=\"openEvaluator\" title=\"添加被评估人\" @ok=\"handleEvaluatorOk\">\n                <span style=\"color: #BD3124;\">注：您可以自主选择1-3个要评估的人</span>\n                <a-select v-model:value=\"evaluator\" :options=\"options\" mode=\"multiple\" placeholder=\"请选择\"\n                    style=\"width: 100%\">\n                </a-select>\n            </a-modal>\n        </div>\n    </div>\n</template>\n\n<style lang=\"less\" scoped>\n.todoList-container {\n    // border: 1px solid red;\n    width: 100%;\n    height: 100%;\n}\n\n.title {\n    // border: 1px solid blue;\n    height: 35px;\n    display: flex;\n    justify-content: space-between;\n    margin: 0px 10px 10px 10px;\n\n    span {\n        font-size: 16px;\n        font-weight: bold;\n        display: flex;\n        align-items: center;\n    }\n}\n\n.todoTable {\n    height: calc(100% - 35px - 10px);\n    // border: 1px solid red;\n    margin: 0 10px 0 10px;\n    overflow: hidden;\n    /* 防止滚动条溢出 */\n}\n\n.actionBtn {\n    display: flex;\n    justify-content: space-between;\n    margin: 20px auto 0px auto;\n}\n</style>","import script from \"./TodoList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodoList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TodoList.vue?vue&type=style&index=0&id=0a83e9fa&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.10_webpack@5.95.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0a83e9fa\"]])\n\nexport default __exports__"],"names":["getTodoListApi","pageNum","pageSize","Promise","resolve","reject","axios","method","url","headers","params","then","response","catch","error","getUserListApi","getEvaluatedListApi","userIds","data","JSON","stringify","__exports__","onMounted","getTodoList","getUserList","updateScrollHeight","window","addEventListener","onUnmounted","removeEventListener","scrollHeight","ref","router","useRouter","pagination","reactive","current","showSizeChanger","total","showTotal","range","columns","title","dataIndex","key","width","align","screenHeight","innerHeight","containerHeight","value","splice","length","sessionStorage","getItem","res","code","filteredData","filter","item","operation","push","map","index","id","taskTag","type","taskDetail","detail","submitTime","presentDate","evaluatedName","department","message","msg","err","getTagColor","handleAgreeOne","record","success","handleTableChange","e","Number","setItem","openRefuse","showModal","handleEnterQues","todoListId","localStorage","path","openDetail","showDetail","openEvaluator","showEvaluator","evaluator","options","i","name","userId","handleEvaluatorOk","selectedKeys","find","opt","warn"],"sourceRoot":""}